#
# agent - Pylons environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = false
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
ssl_pem = %(here)s/../.appdata/secure/server.pem
host = 0.0.0.0
port = 19000
use_threadpool = true
threadpool_workers = 30
threadpool_spawn_if_under = 15

[app:main]
use = egg:agent
full_stack = true
static_files = true
gzip = true

cache_dir = %(here)s/../data
beaker.session.key = agent
beaker.session.secret = somesecret

agent_root = %(here)s/../../../../../..
repo_root = %(here)s/../../../../../../packages

# all units are seconds
# threadmgr settings
threadMgr_garbage_freq = 60
threadMgr_thread_age = 3600

# pkgmgr settings
packageMgr_garbage_freq = 1800
packageMgr_package_age = 86400
packageMgr_package_min_age = 7200
packageMgr_install_package_min_age = 7200
packageMgr_install_package_age = 43200

# 512 MB/sec http download
package_throttle = 1.0
package_bandwidth = 74055680
# http proxy
urlgrabber_proxies = null  

# thread timeouts
exec_thread_sleep_time = 1
exec_thread_timeout = 600
exec_thread_progress_timeout = 60
agent_thread_timeout = 600

# downloads settings
# download > 100KB/sec, to calculate download thread timeout 
download_thread_rate_per_sec = 102400
download_thread_min_time = 60
download_thread_max_time = 7200
download_thread_progress_ratio = 0.05
download_thread_min_progress_time = 10
download_thread_sotimeout = 30.0
download_thread_attempt = 1
download_skip_prop=true

# monitoring settings
monitor_check_timeinterval = 120
agent_health_report_interval = 120
monitor_probation_enabled = true
monitor_publish_enabled = false

# authentication
pkiauth_enabled = false
password.local = changeme

# app user
agent_user_account = cronus
app_user_account = cronusapp
use_app_user = true
app_user_group = app
# disable all sudo usage, this is only possible if both agent user and app user are the same
disable_sudo=false

# agent health
health_disk_usage_percent_threshold=90
health_agent_file_descriptor_usage_threshold=500
health_agent_mem_usage_threshold=200000
health_disk_usage_gc_threshold=70
health_disk_usage_gc_buffer=20

# application lifecycle related
# time threshold distinguish agent restart from system restart
system_restart_time_threshold=300
# delay in startup an application after system restart
app_restart_init_delay=15
# max number of manifest to keep including active manifest, allow quick rollbacks
keep_past_manifests=3
skip_cleanup_on_failure = false
sys_data_dir=.data
# application data dirs
app_data_dir=.appdata

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false

# 
# agent self update configurations
#
selfupdate_source=http://www.stackscaling.com/agentrepo
safeshutdown_busy_check_timeout=86400

# Logging configuration
[loggers]
keys = root, agent, exec, monitor, agentapi, uuid, execoutput, gc

[handlers]
keys = console, agent, exec, monitor, agentapi, uuid, execoutput, gc

[formatters]
keys = generic, execoutput

[logger_root]
level = INFO
handlers = console

[logger_monitor]
level = INFO
handlers = monitor
qualname = agent.lib.monitor
propagate = 0

[logger_exec]
level = INFO
handlers = exec
qualname = agent.lib.agent_thread.exec_thread
propagate = 0

[logger_execoutput]
level = INFO
handlers = execoutput
qualname = execoutput
propagate = 0

[logger_agent]
level = INFO
handlers = agent
qualname = agent
propagate = 0

[logger_gc]
level = INFO
handlers = gc
qualname = gc
propagate = 0

[logger_agentapi]
level = INFO
handlers = agentapi
qualname = agentapi
propagate = 0

[logger_uuid]
level = INFO
handlers = uuid
qualname = uuid
propagate = 0

# log file settings
[handler_exec]
class=logging.handlers.RotatingFileHandler
level=INFO
formatter=generic
args=('logs/exec_thread.log', 'a', 5242880, 1)

[handler_execoutput]
class=logging.handlers.RotatingFileHandler
level=INFO
formatter=execoutput
args=('logs/exec_threadoutput.log', 'a', 5242880, 1)

[handler_monitor]
class=logging.handlers.RotatingFileHandler
level=INFO
formatter=generic
args=('logs/monitor.log', 'a', 5242880, 1)

[handler_agent]
class=logging.handlers.RotatingFileHandler
level=INFO
formatter=generic
args=('logs/agent.log', 'a', 5242880, 3)

[handler_gc]
class=logging.handlers.RotatingFileHandler
level=INFO
formatter=generic
args=('logs/gc.log', 'a', 5242880, 1)

[handler_agentapi]
class=logging.handlers.RotatingFileHandler
level=INFO
formatter=generic
args=('logs/agent_api.log', 'a', 5242880, 3)

[handler_uuid]
class=logging.handlers.RotatingFileHandler
level=INFO
formatter=generic
args=('logs/uuid.log', 'a', 5242880, 1)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = ERROR
formatter = generic

[formatter_generic]
format = %(asctime)s.%(msecs)03d %(levelname)-5.5s [%(name)s] [%(threadName)s] %(message)s
datefmt = %Y/%m/%d %H:%M:%S

[formatter_execoutput]
format = %(message)s
