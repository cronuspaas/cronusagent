<?xml version="1.0" encoding="UTF-8"?>
<project name="agent" default="test">
    <!-- load overriding dir.root if exists. -->
    <property file="dir.root.properties"/>
    <property name="dir.root" value="${basedir}/.."/>

    <!-- overwrite some properties -->
    <property name="env.build" value="dev"/>
    <property name="env.test" value="unit"/>
    <property name="name.version-file" value="version.properties"/>
    <property name="file.version" value="./cronus/${name.version-file}"/>
    <property name="pattern.lib" value="[artifact].[ext]"/>
    <property name="dir.src.main" value="${basedir}/agent"/>
    <property name="dir.src.test-root" value="${basedir}/agent/tests"/>
    <property name="package-platform" value="unix"/>
    <property name="module" value="agent"/>

    <!-- source common -->
    <property name="dir.common" value="${dir.root}/build"/>
    <import file="${dir.common}/build-common.xml"/>

    <!-- add proprties after init -->
    <target name="init.loadprop" depends="build-common.init.loadprop">
        <property name="dir.python.bin" value="${dir.root}/python-package/target/dist/python-package/bin/"/>
	<echo message="${dir.python.bin}"/>
    </target>

    <!-- runs pylint code checker -->
    <target name="pylint" depends="init.package" description="runs pylint code analyzer" if="pylint">
        <exec executable="${dir.python.bin}/python" failonerror="true">
            <arg value="${dir.python.bin}/pylint"/>
            <arg value="--rcfile=${dir.common}/.pylintrc"/>
            <arg value="${module}"/>
        </exec>
    </target>

    <target name="test" depends="init.init-common,make.config" description="runs test" unless="notest">
        <property name="env.test" value="unit"/>
        <if>
            <available file="${dir.src.test}"/>
            <then>
                <exec executable="${dir.python.bin}/python" failonerror="true" dir="${basedir}">
                    <arg value="${dir.python.bin}/nosetests"/>
                    <arg value="-d"/>
                    <arg value="-w"/>
                    <arg value="${dir.src.test}"/>
                </exec>
            </then>
        </if>
    </target>

    <!-- creates cronus build -->
    <target name="build.server" depends="init.package,pylint,test" description="build server">
        <property name="dir.build.server" value="${dir.target.dist}/${module}-${package-version}.${package-platform}"/>
        <delete quiet="true" dir="${dir.build.server}"/>
        <mkdir dir="${dir.build.server}"/>
        <!-- copy all source files -->
        <copy toDir="${dir.build.server}/${module}">
            <fileset dir="${basedir}/${module}">
                <exclude name="**/*.pyc"/>
		<exclude name="**/tests/**"/>
            </fileset>
        </copy>
        <!-- copy egg info dir -->
        <copy toDir="${dir.build.server}/${module}.egg-info">
            <fileset dir="${basedir}/${module}.egg-info"/>
        </copy>
        <!-- copy libraries -->
        <copy toDir="${dir.build.server}/lib">
            <fileset dir="${dir.lib}"/>
        </copy>
        <!-- copy cronus files -->
        <exec executable="cp">
            <arg value="-r"/>
            <arg value="${basedir}/cronus"/>
            <arg value="${dir.build.server}"/>
        </exec>

        <!-- create the logs dir for the logger -->
        <mkdir dir="${dir.build.server}/logs"/>
    </target>
    <target name="build.config" depends="init.package" description="build config">

        <delete quiet="true" dir="${dir.build.server}/conf"/>
        <mkdir dir="${dir.build.server}/conf"/>

        <!-- move all prod configs -->
        <copy todir="${dir.build.server}/conf">
          <fileset dir="${basedir}/conf">
            <include name="*.ini"/>
          </fileset>
        </copy>

    </target>

    <target name="build" depends="build.server,build.config" description="build agent"/>

    <!-- creates cronus distributable package -->
    <target name="package" depends="clean.dist,make.config,init.package,build,process.target.dist,create.cronus" description="package agent"/>

</project>
